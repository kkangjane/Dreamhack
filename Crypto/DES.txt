- 8bytes(64 bits)를 한 블록으로 하는 블록 암호
- 초기 순열(Initial Permutation), 최종 순열(Final Permutation), 페이스텔(Feistel) 구조의 16 라운드, 그리고 각 라운드에 사용되는 48비트의 키를 생성하는 키 생성 함수(Key Generation)로 구성되어 있다.

- 혼돈 성질을 만족하기 위해 치환을, 확산 성질을 만족하기 위해 순열을 사용한다.
- 이들을 여러번 반복하면 암호학적 효과를 보일 수 있다.
- 이렇게 각 라운드를 여러번 반복하여 암호학적 안전성을 확보하는 암호를 곱 암호라고 한다.

<페이스텔 구조>
1. 입력으로 들어온 블록을 동일함 길이의 왼쪽 블록(L)과 오른쪽 블록(R)로 나눈다.
2. 각 라운드마다 오른쪽 블록은 다음 라운드의 왼쪽 블록으로 입력된다.
3. 왼쪽 블록은 오른쪽 블록에 라운드 함수 F를 적용한 결과와 xor되어 다음 라운드의 오른쪽 블록으로 입력된다.
즉, L_n+1 = R_n  ///  R_n+1 = L_n ^ F(R_n, K_n)

- 블록 암호는 평문을 복호화할 수 있어야 하므로, 일반적으로 암호화를 구성하는 각 함수들에 역함수가 존재한다.
그러나 페이스텔 구조를 사용하면 F가 복호화 과정에서 xor로 상쇄되므로 역함수가 존재하지 않아도 된다.
- 또한 암호화와 복호화의 구조가 동일하므로, 암호화에 사용한 라운드 키를 역순으로 입력하면 복호화가 이뤄진다.

